diff -uprN notification/models.py notification.new/models.py
--- notification/models.py	2009-12-23 10:33:41.000000000 -0300
+++ notification.new/models.py	2009-12-23 19:03:49.000000000 -0300
@@ -9,7 +9,7 @@ from django.db import models
 from django.db.models.query import QuerySet
 from django.conf import settings
 from django.core.urlresolvers import reverse
-from django.template import Context
+from django.template import Context, Template
 from django.template.loader import render_to_string
 
 from django.core.exceptions import ImproperlyConfigured
@@ -215,7 +215,7 @@ def get_notification_language(user):
             raise LanguageStoreNotAvailable
     raise LanguageStoreNotAvailable
 
-def get_formatted_messages(formats, label, context):
+def get_formatted_messages(formats, label, context, templates = None):
     """
     Returns a dictionary with the format identifier as the key. The values are
     are fully rendered templates with the given context.
@@ -227,12 +227,18 @@ def get_formatted_messages(formats, labe
             context.autoescape = False
         else:
             context.autoescape = True
-        format_templates[format] = render_to_string((
-            'notification/%s/%s' % (label, format),
-            'notification/%s' % format), context_instance=context)
+        if not templates:
+	    format_templates[format] = render_to_string((
+	    'notification/%s/%s' % (label, format),
+	    'notification/%s' % format), context_instance=context)
+	else:
+	    format_templates[format] = Template(templates[format])
+	    format_templates[format] = Template(templates[format]).render(context)
+
     return format_templates
 
-def send_now(users, label, extra_context=None, on_site=True, current_site=None, notices_url = None):
+def send_now(users, label, extra_context=None, on_site=True, \
+    current_site=None, notices_url = None, templates = None):
     """
     Creates a new notice.
 
@@ -270,12 +276,13 @@ def send_now(users, label, extra_context
 
     current_language = get_language()
 
-    formats = (
-        'short.txt',
-        'full.txt',
-        'notice.html',
-        'full.html',
-    ) # TODO make formats configurable
+    if not templates:
+	formats = (
+	    'short.txt',
+	    'full.txt',
+	    'notice.html',
+	    'full.html',
+	) # TODO make formats configurable
 
     for user in users:
         recipients = []
@@ -301,7 +308,13 @@ def send_now(users, label, extra_context
         context.update(extra_context)
 
         # get prerendered format messages
-        messages = get_formatted_messages(formats, label, context)
+	formats = (
+	    'short.txt',
+	    'full.txt',
+	    'notice.html',
+	    'full.html',
+	)
+	messages = get_formatted_messages(formats, label, context, templates)
 
         # Strip newlines from subject
         subject = ''.join(render_to_string('notification/email_subject.txt', {
diff -uprN notification/templates/notification/email_body.txt notification.new/templates/notification/email_body.txt
--- notification/templates/notification/email_body.txt	2009-12-23 10:33:38.000000000 -0300
+++ notification.new/templates/notification/email_body.txt	2009-12-23 19:22:44.000000000 -0300
@@ -1,6 +1 @@
-{% load i18n %}{% blocktrans %}You have received the following notice from {{ current_site }}:
-
 {{ message }}
-
-To see other notices or change how you receive notifications, please go to {{ notices_url }}.
-{% endblocktrans %}
